:PROPERTIES:
:ID:       52e640bc-2842-4061-807d-2b484057e228
:ROAM_REFS: https://leetcode.com/problems/move-zeroes/
:END:
#+title: 283. Move Zeroes
#+filetags: :Leetcode:

* Problem

Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

*Note* that you must do this in-place without making a copy of the array.

* Solution

Use two pointers: a "left" and a "right" pointer.

The right pointer moves until it finds a non-zero value. Once it reaches a non-zero value, the "swap" operation occurs. This switches the values in the left and right indexes.

The left pointer moves to the right by one (index increments by 1) after each swap operation.

#+BEGIN_SRC python
class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """

        left_index = 0

        for right_index in range(len(nums)):
            if nums[right_index] != 0:
                nums[left_index], nums[right_index] = nums[right_index], nums[left_index]

                left_index += 1
#+END_SRC
